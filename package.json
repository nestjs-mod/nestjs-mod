{
  "name": "@nestjs-mod/source",
  "description": "A collection of utilities for unifying NestJS applications and modules",
  "version": "0.0.0",
  "license": "MIT",
  "author": "EndyKaufman <admin@site15.ru>",
  "engines": {
    "node": ">=14",
    "npm": ">=6"
  },
  "publishConfig": {
    "access": "public"
  },
  "bugs": {
    "url": "https://github.com/nestjs-mod/nestjs-mod/issues"
  },
  "homepage": "https://github.com/nestjs-mod/nestjs-mod",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nestjs-mod/nestjs-mod.git"
  },
  "maintainers": [
    {
      "name": "EndyKaufman",
      "email": "admin@site15.ru"
    }
  ],
  "scripts": {
    "_____dev infra_____": "_____dev infra_____",
    "serve:dev:cli": "./node_modules/.bin/nx serve cli",
    "serve:dev:example-basic": "./node_modules/.bin/nx serve example-basic --host=0.0.0.0",
    "serve:dev": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=serve",
    "serve:dev:example-fastify": "./node_modules/.bin/nx serve example-fastify --host=0.0.0.0",
    "serve:dev:example-tcp-microservice": "./node_modules/.bin/nx serve example-tcp-microservice --host=0.0.0.0",
    "_____prod infra_____": "_____prod infra_____",
    "start": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=start",
    "start:prod:example-basic": "./node_modules/.bin/nx start example-basic",
    "build": "npm run generate && npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=build --skip-nx-cache=true",
    "start:prod:example-fastify": "./node_modules/.bin/nx start example-fastify",
    "start:prod:example-tcp-microservice": "./node_modules/.bin/nx start example-tcp-microservice",
    "_____docs_____": "_____docs_____",
    "docs:infrastructure": "export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=start --parallel=1",
    "_____tests_____": "_____tests_____",
    "test": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",
    "test:example-basic": "./node_modules/.bin/nx test example-basic --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",
    "test:example-fastify": "./node_modules/.bin/nx test example-fastify --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",
    "test:example-tcp-microservice": "./node_modules/.bin/nx test example-tcp-microservice --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",
    "test:integrations-build": "bash ./integrations/scripts/build-application.sh",
    "check-contrib": "bash ./integrations/scripts/check-contrib.sh",
    "_____lint_____": "_____lint_____",
    "lint": "npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=lint",
    "lint:fix": "npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=lint --fix",
    "tsc:lint": "tsc --noEmit -p tsconfig.base.json && tsc --noEmit -p ./apps/example-basic/tsconfig.spec.json",
    "_____schematics_____": "_____schematics_____",
    "build:schematics": "./node_modules/.bin/nx build schematics",
    "local:schematics:init": "./node_modules/.bin/nx g ./dist/libs/schematics:init",
    "local:schematics:lib": "./node_modules/.bin/nx g ./dist/libs/schematics:lib",
    "local:schematics:app": "./node_modules/.bin/nx g ./dist/libs/schematics:app",
    "schematics-version-bump": "cd ./integrations/schematics-version-bump/ && npx -y npm-check-updates -u && node ./schematics-version-bump.js && cd ../..",
    "_____utils_____": "_____utils_____",
    "generate": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix",
    "nx": "nx",
    "dep-graph": "./node_modules/.bin/nx dep-graph",
    "nx:many": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod/source",
    "make-ts-list": "./node_modules/.bin/rucken make-ts-list",
    "update:nestjs-mod-example": "bash ./integrations/scripts/update-nestjs-mod-example.sh",
    "manual:prepare": "npm run schematics-version-bump && yes | cp -rf ./README.md ./libs/schematics && yes | cp -rf ./README.md ./libs/schematics/src/lib/generators/init/files && npm run generate && npm run build && npm run docs:infrastructure && npm run test",
    "tsc": "tsc",
    "rucken": "rucken"
  },
  "scriptsComments": {
    "serve:dev:cli": [
      "Running cli application source code in watch mode"
    ],
    "serve:dev:example-basic": [
      "Running example-basic application source code in watch mode"
    ],
    "serve:dev": [
      "Running NestJS application source code in watch mode"
    ],
    "serve:dev:example-fastify": [
      "Running example-fastify source code in watch mode"
    ],
    "serve:dev:example-tcp-microservice": [
      "Running example-tcp-microservice source code in watch mode"
    ],
    "start": [
      "Launching a built NestJS application (you must first build it using the build command)"
    ],
    "start:prod:example-basic": [
      "Launching a built example-basic (you must first build it using the build command)"
    ],
    "build": [
      "Building a NestJS application"
    ],
    "start:prod:example-fastify": [
      "Launching a built example-fastify (you must first build it using the build command)"
    ],
    "start:prod:example-tcp-microservice": [
      "Launching a built example-tcp-microservice (you must first build it using the build command)"
    ],
    "docs:infrastructure": [
      "Creation of documentation for the entire infrastructure and creation of files necessary to launch the infrastructure"
    ],
    "test": [
      "Running tests across the entire project"
    ],
    "test:example-basic": [
      "Running tests for example-basic"
    ],
    "test:example-fastify": [
      "Running tests for example-fastify"
    ],
    "test:example-tcp-microservice": [
      "Running tests for example-tcp-microservice"
    ],
    "test:integrations-build": [
      "Run an integration test in which we create a new NestJS-mod application using a schematic and check its operation"
    ],
    "check-contrib": [
      "Clone the repository https://github.com/nestjs-mod/nestjs-mod-contrib and run the build and tests on versions of the current NestJS repository-mod"
    ],
    "lint": [
      "Checking the typescript code for the entire project"
    ],
    "lint:fix": [
      "Checking the typescript code throughout the project and trying to fix everything possible"
    ],
    "tsc:lint": [
      "Checking typescript code in libraries"
    ],
    "build:schematics": [
      "Build NestJS-mod schematic of utilities"
    ],
    "local:schematics:init": [
      "Alias for local launch of initialization NestJS-mod schematic"
    ],
    "local:schematics:lib": [
      "Alias for local launch schematic for generating NestJS-mod libraries"
    ],
    "local:schematics:app": [
      "Alias for local launch schematic for generating NestJS-mod applications"
    ],
    "schematics-version-bump": [
      "Updating libraries in the code that generates an empty NestJS-mod application"
    ],
    "generate": [
      "Running the \"generate\" nx command in applications and libraries which can be customized at your discretion",
      "automatically generating an index.ts file for each library",
      "checking the code and trying to fix it"
    ],
    "nx": [
      "Alias for running the nx version locally, which is in the project (example: `npm run nx -- dep-graph`),",
      "in order not to install nx globally in the operating system"
    ],
    "dep-graph": [
      "Generating dependency diagrams for nx applications and libraries"
    ],
    "nx:many": [
      "Alias for running many nx commands (example: `npm run nx:many -- -t=lint`),",
      "an exception has been added for the root project,",
      "since sometimes an attempt to run an nx command on it can lead to the command freezing"
    ],
    "make-ts-list": [
      "Automatically generating an index.ts file for each library,",
      "works only for nx applications created using the `--projectNameAndRootFormat=as-provided` flag"
    ],
    "update:nestjs-mod-example": [
      "Start generating an empty application using the latest versions of the NestJS-mod libraries, published in https://github.com/nestjs-mod/nestjs-mod-example"
    ],
    "manual:prepare": [
      "Preparing code, building code, creating infrastructure documentation",
      "and all the files necessary to raise the infrastructure and running tests (generate, build, docs:infrastructure, test)"
    ],
    "tsc": [
      "Alias for running the tsc version locally, which is in the project (example: `npm run tsc -- --noEmit -p tsconfig.base.json`),",
      "in order not to install tsc globally in the operating system"
    ],
    "rucken": [
      "Alias for console tools and scripts for nx and not only use to automate the workflow and",
      "speed up the development process (example: `npm run rucken -- make-ts-list`, site: https://www.npmjs.com/package/rucken)"
    ]
  },
  "private": true,
  "devDependencies": {
    "@commitlint/cli": "^17.0.0",
    "@commitlint/config-conventional": "^17.0.0",
    "@nestjs/schematics": "^10.0.1",
    "@nestjs/testing": "^10.0.2",
    "@nx/eslint-plugin": "17.2.8",
    "@nx/jest": "17.2.8",
    "@nx/node": "17.2.8",
    "@nx/webpack": "17.2.8",
    "@nx/workspace": "17.2.8",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.7",
    "@svgr/webpack": "^8.0.1",
    "@swc-node/register": "~1.6.7",
    "@swc/core": "~1.3.85",
    "@theunderscorer/nx-semantic-release": "^2.10.0",
    "@types/jest": "^29.4.0",
    "@types/markdown-it": "^13.0.7",
    "@types/node": "18.16.9",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "class-validator-multi-lang": "^0.130.201",
    "eslint": "~8.48.0",
    "eslint-config-prettier": "^9.0.0",
    "fast-glob": "^3.3.2",
    "husky": "^8.0.3",
    "jest": "^29.4.1",
    "jest-environment-node": "^29.4.1",
    "lint-staged": "^15.2.0",
    "nx": "17.2.8",
    "prettier": "^2.6.2",
    "react-refresh": "^0.10.0",
    "rucken": "^4.6.4",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.2.2",
    "url-loader": "^4.1.1",
    "verdaccio": "^5.0.4"
  },
  "dependencies": {
    "@fastify/cookie": "^9.3.1",
    "@nestjs/common": "^10.0.2",
    "@nestjs/core": "^10.0.2",
    "@nestjs/microservices": "^10.0.2",
    "@nestjs/platform-express": "^10.0.2",
    "@nestjs/platform-fastify": "^10.0.2",
    "@nx/devkit": "^17.2.8",
    "@nx/eslint": "^17.2.8",
    "@nx/js": "^17.2.8",
    "axios": "^1.0.0",
    "case-anything": "^2.1.13",
    "class-validator": "^0.14.0",
    "dotenv": ">=16.3.1",
    "markdown-it": "^14.0.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.0",
    "tslib": "^2.3.0"
  },
  "nx": {
    "includedScripts": []
  },
  "lint-staged": {
    "*.{js,ts}": "eslint --fix"
  }
}